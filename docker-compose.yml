services:
  redis:
    image: redis:latest
    container_name: poridhi-redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - poridhi

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.1
    container_name: poridhi-es
    restart: always
    cpus: 2
    mem_limit: 1g
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m" # minimum and maximum Java heap size, recommend setting both to 50% of system RAM
      - ELASTIC_PASSWORD=your_password
      - xpack.security.enabled=true
      - xpack.license.self_generated.type=basic
    ports:
      - "9200:9200"
    networks:
      - poridhi
    # healthcheck:
    #   test: curl -s http://localhost:9200/_cluster/health || exit 1
    #   interval: 10s
    #   retries: 5
    #   start_period: 20s

  qdrant:
    image: qdrant/qdrant
    container_name: poridhi-qdrant
    restart: always
    ports:
      - "6333:6333"  # REST API port
    networks:
      - poridhi
    # environment:
    #   - QDRANT__SERVER__API__HOST=0.0.0.0
    #   - QDRANT__SERVER__UI__ENABLED=true   # Ensure the UI is enabled
    # healthcheck:
    #   test: curl -f http://localhost:6333/collections || exit 1
    #   interval: 10s
    #   retries: 5
    #   start_period: 20s

  main:
    build: ./main
    container_name: poridhi-main
    depends_on:
      - redis
    ports:
      - "8000:8000"
    networks:
      - poridhi

  embedder:
    build: ./embedder
    container_name: poridhi-embedder
    depends_on:
      - redis
    networks:
      - poridhi

  retriever:
    build: ./retriever
    container_name: poridhi-retriever
    depends_on:
      redis:
        condition: service_started
      qdrant:
        condition: service_started
      elasticsearch:
        condition: service_started
    networks:
      - poridhi

  reranker:
    build: ./reranker
    container_name: poridhi-reranker
    depends_on:
      - redis
    networks:
      - poridhi

  nginx:
    image: nginx:latest
    ports:
      - "8080:8080"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - embedder

networks:
  poridhi:
    external: true
